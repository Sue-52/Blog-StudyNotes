"use strict";(self.webpackChunkvuepress_theme_reco_demo=self.webpackChunkvuepress_theme_reco_demo||[]).push([[8909],{1588:(i,e,l)=>{l.r(e),l.d(e,{data:()=>t});const t={key:"v-75395746",path:"/blogs/02.Leetcode/01.Learning%20Algorithm/",title:"Algorithm Outline - 算法大纲",lang:"en-US",frontmatter:{title:"Algorithm Outline - 算法大纲",date:"2022-4-25",categories:["Algorithm"],tags:["Algorithm"]},excerpt:"",headers:[{level:2,title:"Algorithm Outline - 算法大纲",slug:"algorithm-outline-算法大纲",children:[]}],git:{createdTime:1650932347e3,updatedTime:1650932347e3,contributors:[{name:"Sue-52",email:"1219243947@qq.com",commits:1}]},filePathRelative:"blogs/02.Leetcode/01.Learning Algorithm/README.md"}},8572:(i,e,l)=>{l.r(e),l.d(e,{default:()=>o});const t=(0,l(6252).uE)('<h2 id="algorithm-outline-算法大纲" tabindex="-1"><a class="header-anchor" href="#algorithm-outline-算法大纲" aria-hidden="true">#</a> Algorithm Outline - 算法大纲</h2><ol><li>算法的复杂度分析。</li><li>数组、链表、跳表</li><li>栈、队列、优先队列、双端队列</li><li>哈希表、映射、集合</li><li>树、图、二叉树、二叉搜索树</li><li>泛型递归、树的递归</li><li>分治、回调</li><li>广度优先搜索、深度优先搜索</li><li>高级搜索：剪枝与启发式</li><li>排序算法，以及他们的区别和优化</li><li>回溯法、贪心算法</li><li>二分查找</li><li>并查树、字典树</li><li>红黑树、AVL树</li><li>位运算</li><li>布隆过滤器、URL Cache</li><li>字符串操作</li></ol>',2),r={},o=(0,l(3744).Z)(r,[["render",function(i,e){return t}]])}}]);