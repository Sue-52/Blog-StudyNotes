"use strict";(self.webpackChunkvuepress_theme_reco_demo=self.webpackChunkvuepress_theme_reco_demo||[]).push([[9475],{2181:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-8e8f2e42",path:"/docs/05.Language%20Learning/01.C++/01.Basic%20KnowLedge/code/01.C++%20Primer%20Plus/practice/01.C++%20Primer%20Plus/chapter02-Starting%20C++.html",title:"chapter02-Start C++",lang:"en-US",frontmatter:{title:"chapter02-Start C++",date:"2022-05-03T21:30:00.000Z",categories:["C++"],tags:["C++"]},excerpt:"",headers:[{level:2,title:"chapter02-Start C++ - 初识 C++",slug:"chapter02-start-c-初识-c",children:[{level:3,title:"练习题",slug:"练习题",children:[]},{level:3,title:"编程题",slug:"编程题",children:[]}]}],git:{createdTime:1651579909e3,updatedTime:1651579909e3,contributors:[{name:"Sue-52",email:"1219243947@qq.com",commits:1}]},filePathRelative:"docs/05.Language Learning/01.C++/01.Basic KnowLedge/code/01.C++ Primer Plus/practice/01.C++ Primer Plus/chapter02-Starting C++.md"}},3627:(n,s,a)=>{a.r(s),a.d(s,{default:()=>t});const e=(0,a(6252).uE)('<h2 id="chapter02-start-c-初识-c" tabindex="-1"><a class="header-anchor" href="#chapter02-start-c-初识-c" aria-hidden="true">#</a> chapter02-Start C++ - 初识 C++</h2><blockquote><p>目标：</p><ol><li>练习题</li><li>编程题</li></ol></blockquote><h3 id="练习题" tabindex="-1"><a class="header-anchor" href="#练习题" aria-hidden="true">#</a> 练习题</h3><p>在 <strong>附录J</strong> 中可以找到所有复习题的答案。</p><ol><li>C++程序的模块叫什么？</li></ol><blockquote><p>函数</p></blockquote><ol start="2"><li><p>下面的预处理器编译指令是做什么用的？</p><div class="language-C ext-C line-numbers-mode"><pre class="language-C"><code> #include &lt;iostream&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>将 iostream 文件添加到模块中，在代码被编译前替换文本</p></blockquote></li><li><p>下面的语句是做什么用的？</p><div class="language-C ext-C line-numbers-mode"><pre class="language-C"><code> using namespace std；\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li></ol><blockquote><p>是该程序可以使用 std 命名空间中的定义</p></blockquote><ol start="4"><li><p>什么语句可以用来打印短语 “Hello,world” 然后开始新的一行？</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Hello,world&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>\n\ncout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Hello,world \\n&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p>什么语句可以用来创建名为 cheeses 的整数变量？</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> cheeses<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p>什么语句可以用来将值 32 赋给变量 cheeses ？</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>cheeses <span class="token operator">=</span> <span class="token number">32</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p>什么语句可以用来将从键盘输入的值读入变量 cheeses 中？</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>std<span class="token operator">::</span>cin <span class="token operator">&gt;&gt;</span> cheeses<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p>什么语句可以用来打印“We have X varieties of cheese，”，其中 X 为变量 cheeses 的当前值。</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;We have &quot;</span> <span class="token operator">&lt;&lt;</span> cheeses <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; varieties of cheese.&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p>下面的函数原型指出了关于函数的哪些信息？</p><div class="language-C ext-C line-numbers-mode"><pre class="language-C"><code> int froop（double t）；  // 该函数返回整数类型的返回值，并且需要传入 double 类型的参数\n void rattle（int n）；  // 该函数没有返回值并且需要传入 整数类型的参数\n int prune（void） // 该函数返回整数类型的返回值，并且无形参\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p>定义函数时，在什么情况下不必使用关键字 return？</p></li></ol><blockquote><p>当前定义函数的返回值为 viod，则不需要 return</p></blockquote><ol start="11"><li>假设您编写的main（）函数包含如下代码：</li></ol><div class="language-C ext-C line-numbers-mode"><pre class="language-C"><code> cout &lt;《 &quot;please enter your PIN：&quot;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>​ 而编译器指出cout是一个未知标识符。导致这种问题的原因很可能是什么？指出3种修复这种问题的方法。</p><pre><code>1. 没写 `using namespace std`;\n2. 没写头文件 `#include &lt;iostream&gt;`\n3. 不写 `using namespace std`; 写`std::cout&lt;&lt;&quot;........&quot;`;\n</code></pre><h3 id="编程题" tabindex="-1"><a class="header-anchor" href="#编程题" aria-hidden="true">#</a> 编程题</h3><ol><li>编写一个C++程序，它显示您的姓名和地址。</li></ol><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>   <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>\n   \n   using namespace std<span class="token punctuation">;</span>\n   \n   <span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n   <span class="token punctuation">{</span>\n   \t<span class="token comment">// 显示姓名和地址</span>\n   \t\n   \t<span class="token comment">// 1.定义存储姓名和地址的变量</span>\n   \tstring name<span class="token punctuation">;</span>\n   \tstring address<span class="token punctuation">;</span>\n   \t\n       <span class="token comment">// 2. 创建行为</span>\n   \tcout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;请输入姓名：&quot;</span><span class="token punctuation">;</span>\n   \tcin <span class="token operator">&gt;&gt;</span> name<span class="token punctuation">;</span>\n   \tcout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;请输入地址：&quot;</span><span class="token punctuation">;</span>\n   \tcin <span class="token operator">&gt;&gt;</span> address<span class="token punctuation">;</span>\n   \t\n   \t<span class="token comment">// 3. 输出结果</span>\n   \tcout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;姓名：&quot;</span> <span class="token operator">&lt;&lt;</span> name <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;\\n&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;地址：&quot;</span> <span class="token operator">&lt;&lt;</span> address <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>\n   \n   \t<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n   <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p><img src="https://raw.githubusercontent.com/Sue-52/PicGo/main/images/image-20220503174225753.png" alt="image-20220503174225753"></p><ol start="2"><li><p>编写一个C++程序，它要求用户输入一个以 long 为单位的距离，然后将它转换为码（1 long等于 220 码）。</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>\n<span class="token keyword">int</span> <span class="token function">getLong</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nusing namespace std<span class="token punctuation">;</span>\n\n<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n\t<span class="token comment">// 要求用户输入一个以 long 为单位的距离，然后将它转换为码（1 long等于 220 码）</span>\n\t\n\t<span class="token comment">// 1.创建变量保存 long</span>\n\t<span class="token keyword">int</span> longData<span class="token punctuation">;</span>\n\n\t<span class="token comment">// 1.创建行为</span>\n\tcout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Please input the long：&quot;</span><span class="token punctuation">;</span>\n\tcin <span class="token operator">&gt;&gt;</span> longData<span class="token punctuation">;</span>\n\t<span class="token comment">// 2. 调用函数</span>\n\t<span class="token keyword">int</span> getLongData <span class="token operator">=</span> <span class="token function">getLong</span><span class="token punctuation">(</span>longData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\t<span class="token comment">// 3. 返回结果</span>\n\tcout <span class="token operator">&lt;&lt;</span> longData <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; long = &quot;</span> <span class="token operator">&lt;&lt;</span> getLongData <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; 码&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>\n\n\t<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// 定义函数用于计算结果并返回</span>\n<span class="token keyword">int</span> <span class="token function">getLong</span><span class="token punctuation">(</span><span class="token keyword">int</span> l<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n\t<span class="token keyword">int</span> L <span class="token operator">=</span> l <span class="token operator">*</span> <span class="token number">220</span><span class="token punctuation">;</span>\n\t<span class="token keyword">return</span> L<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><p><img src="https://raw.githubusercontent.com/Sue-52/PicGo/main/images/image-20220503175103972.png" alt="image-20220503175103972"></p></li><li><p>编写一个C++程序，它使用3个用户定义的函数（包括main（）），并生成下面的输出：</p><div class="language-txt ext-txt line-numbers-mode"><pre class="language-txt"><code> Three blind mice \n Three blind mice \n See how they run \n See how they run\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>其中一个函数要调用两次，该函数生成前两行：另一个函数也被调用两次，并生成其余的输出。</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>\n<span class="token keyword">void</span> <span class="token function">firstPrint</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">void</span> <span class="token function">secondPrint</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nusing namespace std<span class="token punctuation">;</span>\n\n<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n\t<span class="token comment">// 输出：</span>\n\t<span class="token comment">/*\n\t\t Three blind mice\t\n\t\t Three blind mice \n\t\tSee how they run \n\t\tSee how they run\n\t*/</span>\n\n\t<span class="token function">firstPrint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token function">firstPrint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token function">secondPrint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token function">secondPrint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\t<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">void</span> <span class="token function">firstPrint</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n\tcout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Three blind mice&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">void</span> <span class="token function">secondPrint</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n\tcout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;See how they run&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><p><img src="https://raw.githubusercontent.com/Sue-52/PicGo/main/images/image-20220503175613033.png" alt="image-20220503175613033"></p></li><li><p>编写一个程序，让用户输入其年龄，然后显示该年龄包含多少个月，如下所示：</p><div class="language-txt ext-txt line-numbers-mode"><pre class="language-txt"><code>Input： Enter your age：29\nOutput： 348（12 * 29）\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>\n<span class="token keyword">int</span> <span class="token function">getMonths</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nusing namespace std<span class="token punctuation">;</span>\n\n<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n\t<span class="token comment">// 让用户输入其年龄，然后显示该年龄包含多少个月</span>\n\n\t<span class="token comment">// 1. 创建变量</span>\n\t<span class="token keyword">int</span> personAge<span class="token punctuation">;</span>\n\n\t<span class="token comment">// 2. 创建行为</span>\n\tcout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Please input your age：&quot;</span><span class="token punctuation">;</span>\n\tcin <span class="token operator">&gt;&gt;</span> personAge<span class="token punctuation">;</span>\n\t<span class="token comment">// 3. 调用函数获取月份</span>\n\t<span class="token keyword">int</span> getTotalMonths <span class="token operator">=</span> <span class="token function">getMonths</span><span class="token punctuation">(</span>personAge<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\t<span class="token comment">// 4. 输出结果</span>\n\tcout <span class="token operator">&lt;&lt;</span> personAge <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; age = &quot;</span> <span class="token operator">&lt;&lt;</span> getTotalMonths <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; months&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>\n\n\t<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">int</span> <span class="token function">getMonths</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n\t<span class="token keyword">int</span> months <span class="token operator">=</span> age <span class="token operator">*</span> <span class="token number">12</span><span class="token punctuation">;</span>\n\t<span class="token keyword">return</span> months<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><p><img src="https://raw.githubusercontent.com/Sue-52/PicGo/main/images/image-20220503180646224.png" alt="image-20220503180646224"></p></li><li><p>编写一个程序，其中的 main（）调用一个用户定义的函数（以摄氏温度值为参数，并返回相应的华氏温度值）。该程序按下面的格式要求用户输入摄氏温度值，并显示结果：</p><div class="language-txt ext-txt line-numbers-mode"><pre class="language-txt"><code> Please enter a Celsius value：20\n 20 degrees Celsius is 68 degrees Fahrenheit.\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>下面是转换公式：</p><p><strong>华氏温度 = 1.8 × 摄氏温度 + 32.0</strong></p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>\n<span class="token keyword">int</span> <span class="token function">fahrenheitScale</span><span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nusing namespace std<span class="token punctuation">;</span>\n\n<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n\t<span class="token comment">// 让用户输入摄氏温度值,转换为华氏温度</span>\n\n\t<span class="token comment">// 1. 创建变量</span>\n\t<span class="token keyword">double</span> temperature<span class="token punctuation">;</span>\n\n\t<span class="token comment">// 2. 创建行为</span>\n\tcout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Please input the temperature：&quot;</span><span class="token punctuation">;</span>\n\tcin <span class="token operator">&gt;&gt;</span> temperature<span class="token punctuation">;</span>\n\t<span class="token comment">// 3. 调用方法</span>\n\t<span class="token keyword">double</span> fscale <span class="token operator">=</span> <span class="token function">fahrenheitScale</span><span class="token punctuation">(</span>temperature<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\t<span class="token comment">// 4. 输出结果</span>\n\tcout <span class="token operator">&lt;&lt;</span> temperature <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; 摄氏温度 = &quot;</span> <span class="token operator">&lt;&lt;</span> fscale <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; 华氏温度&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>\n\n\t<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">int</span> <span class="token function">fahrenheitScale</span><span class="token punctuation">(</span><span class="token keyword">double</span> scale<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n\t<span class="token keyword">int</span> fscale <span class="token operator">=</span> <span class="token number">1.8</span> <span class="token operator">*</span> scale <span class="token operator">+</span><span class="token number">32.0</span><span class="token punctuation">;</span>\n\t<span class="token keyword">return</span> fscale<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><p><img src="https://raw.githubusercontent.com/Sue-52/PicGo/main/images/image-20220503181516520.png" alt="image-20220503181516520"></p></li><li><p>编写一个程序，其 main（）调用一个用户定义的函数（以光年值为参数，并返回对应天文单位的值）。该程序按下面的格式要求用户输入光年值，并显示结果：</p><div class="language-txt ext-txt line-numbers-mode"><pre class="language-txt"><code> 1 光年 = 63240 天文单位\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>\n<span class="token keyword">int</span> <span class="token function">fahrenheitScale</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nusing namespace std<span class="token punctuation">;</span>\n\n<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n\t<span class="token comment">// 让用户输入光年数值，转换为天文单位</span>\n\t<span class="token comment">// 1 光年 = 63240 天文单位</span>\n\n\t<span class="token comment">// 1. 创建变量</span>\n\t<span class="token keyword">double</span> lightYear<span class="token punctuation">;</span>\n\n\t<span class="token comment">// 2. 创建行为</span>\n\tcout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Please input the temperature：&quot;</span><span class="token punctuation">;</span>\n\tcin <span class="token operator">&gt;&gt;</span> lightYear<span class="token punctuation">;</span>\n\t<span class="token comment">// 3. 调用方法</span>\n\t<span class="token keyword">double</span> astronomy <span class="token operator">=</span> <span class="token function">calcAstronomy</span><span class="token punctuation">(</span>lightYear<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\t<span class="token comment">// 4. 输出结果</span>\n\tcout <span class="token operator">&lt;&lt;</span> lightYear <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; 光年 = &quot;</span> <span class="token operator">&lt;&lt;</span> astronomy <span class="token operator">&lt;&lt;</span> <span class="token string">&quot; 天文单位&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>\n\n\t<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">int</span> <span class="token function">calcAstronomy</span><span class="token punctuation">(</span><span class="token keyword">int</span> year<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n\t<span class="token keyword">int</span> astronomy <span class="token operator">=</span> <span class="token number">63240</span> <span class="token operator">*</span> year<span class="token punctuation">;</span>\n\t<span class="token keyword">return</span> astronomy<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><p><img src="https://raw.githubusercontent.com/Sue-52/PicGo/main/images/image-20220503200239111.png" alt="image-20220503200239111"></p></li><li><p>编写一个程序，要求用户输入小时数和分钟数。在 main（）函数中，将这两个值传递给一个 void 函数，后者以下面这样的格式显示这两个值：</p><div class="language-txt ext-txt line-numbers-mode"><pre class="language-txt"><code> Enter the number of hours：9\n Enter the number of minutes：28\n Time：9:28\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>\n<span class="token keyword">void</span> <span class="token function">printTime</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">,</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nusing namespace std<span class="token punctuation">;</span>\n\n<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n\t<span class="token comment">// 用户输入小时数和分钟数</span>\n\t<span class="token comment">// 输出：</span>\n\t<span class="token comment">/*\n\t\tEnter the number of hours：9\n\t\tEnter the number of minutes：28\n\t\tTime：9:28\n\t*/</span>\n\n\t<span class="token comment">// 1. 创建变量</span>\n\t<span class="token keyword">int</span> hour<span class="token punctuation">;</span>\n\t<span class="token keyword">int</span> minute<span class="token punctuation">;</span>\n\n\t<span class="token comment">// 2.创建方法</span>\n\tcout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Please input the hour：&quot;</span><span class="token punctuation">;</span>\n\tcin <span class="token operator">&gt;&gt;</span> hour<span class="token punctuation">;</span>\n\tcout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Please input the minute：&quot;</span><span class="token punctuation">;</span>\n\tcin <span class="token operator">&gt;&gt;</span> minute<span class="token punctuation">;</span>\n\t<span class="token comment">// 3.调用函数</span>\n\t<span class="token function">printTime</span><span class="token punctuation">(</span>hour<span class="token punctuation">,</span> minute<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\t<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">void</span> <span class="token function">printTime</span><span class="token punctuation">(</span><span class="token keyword">int</span> hours<span class="token punctuation">,</span><span class="token keyword">int</span> minutes<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n\tcout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Enter the number of hours：&quot;</span> <span class="token operator">&lt;&lt;</span> hours <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>\n\tcout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Enter the number of minutes：&quot;</span> <span class="token operator">&lt;&lt;</span> minutes <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>\n\tcout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Time：&quot;</span> <span class="token operator">&lt;&lt;</span> hours <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;:&quot;</span> <span class="token operator">&lt;&lt;</span> minutes <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><p><img src="https://raw.githubusercontent.com/Sue-52/PicGo/main/images/image-20220503200920900.png" alt="image-20220503200920900"></p></li></ol>',19),p={},t=(0,a(3744).Z)(p,[["render",function(n,s){return e}]])}}]);